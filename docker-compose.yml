version: '3.9'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media/
    expose:
      - "8000"
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - static_volume:/app/staticfiles  # Подключаем том для статических файлов
      - media_volume:/app/media

  db:
    image: postgres  # Исправлено: добавлен отступ
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    expose:
      - "6379"

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

volumes:
  static_volume:
  media_volume:
  postgres_data:  # Для хранения данных PostgreSQL
